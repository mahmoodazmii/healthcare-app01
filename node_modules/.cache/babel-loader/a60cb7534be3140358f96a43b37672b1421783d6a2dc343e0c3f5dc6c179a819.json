{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ServiceForm=_ref=>{let{addService,editingService,updateService}=_ref;const[service,setService]=useState({name:\"\",description:\"\",price:\"\"});// Pre-fill form when editing\nuseEffect(()=>{if(editingService){setService(editingService);}else{setService({name:\"\",description:\"\",price:\"\"});}},[editingService]);// Handle form input changes\nconst handleChange=e=>{const{name,value}=e.target;setService({...service,[name]:value});};// Handle form submission\nconst handleSubmit=e=>{e.preventDefault();if(!service.name||!service.description||!service.price){alert(\"All fields are required!\");return;}if(editingService){updateService(service);}else{addService(service);}setService({name:\"\",description:\"\",price:\"\"});};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"service-form\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingService?\"Update Service\":\"Add New Service\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:service.name,placeholder:\"Service Name\",onChange:handleChange}),/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",value:service.description,placeholder:\"Service Description\",onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",name:\"price\",value:service.price,placeholder:\"Service Price\",onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:editingService?\"Update\":\"Add\"})]});};export default ServiceForm;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","ServiceForm","_ref","addService","editingService","updateService","service","setService","name","description","price","handleChange","e","value","target","handleSubmit","preventDefault","alert","onSubmit","className","children","type","placeholder","onChange"],"sources":["C:/Users/Mahmood Azmii/Desktop/assginment/healthcare-services-app/src/components/ServiceForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst ServiceForm = ({ addService, editingService, updateService }) => {\r\n  const [service, setService] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    price: \"\",\r\n  });\r\n\r\n  // Pre-fill form when editing\r\n  useEffect(() => {\r\n    if (editingService) {\r\n      setService(editingService);\r\n    } else {\r\n      setService({ name: \"\", description: \"\", price: \"\" });\r\n    }\r\n  }, [editingService]);\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setService({ ...service, [name]: value });\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!service.name || !service.description || !service.price) {\r\n      alert(\"All fields are required!\");\r\n      return;\r\n    }\r\n\r\n    if (editingService) {\r\n      updateService(service);\r\n    } else {\r\n      addService(service);\r\n    }\r\n    setService({ name: \"\", description: \"\", price: \"\" });\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"service-form\">\r\n      <h2>{editingService ? \"Update Service\" : \"Add New Service\"}</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={service.name}\r\n        placeholder=\"Service Name\"\r\n        onChange={handleChange}\r\n      />\r\n      <textarea\r\n        name=\"description\"\r\n        value={service.description}\r\n        placeholder=\"Service Description\"\r\n        onChange={handleChange}\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        name=\"price\"\r\n        value={service.price}\r\n        placeholder=\"Service Price\"\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\">{editingService ? \"Update\" : \"Add\"}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ServiceForm;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnD,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAmD,IAAlD,CAAEC,UAAU,CAAEC,cAAc,CAAEC,aAAc,CAAC,CAAAH,IAAA,CAChE,KAAM,CAACI,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,CACrCa,IAAI,CAAE,EAAE,CACRC,WAAW,CAAE,EAAE,CACfC,KAAK,CAAE,EACT,CAAC,CAAC,CAEF;AACAd,SAAS,CAAC,IAAM,CACd,GAAIQ,cAAc,CAAE,CAClBG,UAAU,CAACH,cAAc,CAAC,CAC5B,CAAC,IAAM,CACLG,UAAU,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,WAAW,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CACtD,CACF,CAAC,CAAE,CAACN,cAAc,CAAC,CAAC,CAEpB;AACA,KAAM,CAAAO,YAAY,CAAIC,CAAC,EAAK,CAC1B,KAAM,CAAEJ,IAAI,CAAEK,KAAM,CAAC,CAAGD,CAAC,CAACE,MAAM,CAChCP,UAAU,CAAC,CAAE,GAAGD,OAAO,CAAE,CAACE,IAAI,EAAGK,KAAM,CAAC,CAAC,CAC3C,CAAC,CAED;AACA,KAAM,CAAAE,YAAY,CAAIH,CAAC,EAAK,CAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC,CAClB,GAAI,CAACV,OAAO,CAACE,IAAI,EAAI,CAACF,OAAO,CAACG,WAAW,EAAI,CAACH,OAAO,CAACI,KAAK,CAAE,CAC3DO,KAAK,CAAC,0BAA0B,CAAC,CACjC,OACF,CAEA,GAAIb,cAAc,CAAE,CAClBC,aAAa,CAACC,OAAO,CAAC,CACxB,CAAC,IAAM,CACLH,UAAU,CAACG,OAAO,CAAC,CACrB,CACAC,UAAU,CAAC,CAAEC,IAAI,CAAE,EAAE,CAAEC,WAAW,CAAE,EAAE,CAAEC,KAAK,CAAE,EAAG,CAAC,CAAC,CACtD,CAAC,CAED,mBACEV,KAAA,SAAMkB,QAAQ,CAAEH,YAAa,CAACI,SAAS,CAAC,cAAc,CAAAC,QAAA,eACpDtB,IAAA,OAAAsB,QAAA,CAAKhB,cAAc,CAAG,gBAAgB,CAAG,iBAAiB,CAAK,CAAC,cAChEN,IAAA,UACEuB,IAAI,CAAC,MAAM,CACXb,IAAI,CAAC,MAAM,CACXK,KAAK,CAAEP,OAAO,CAACE,IAAK,CACpBc,WAAW,CAAC,cAAc,CAC1BC,QAAQ,CAAEZ,YAAa,CACxB,CAAC,cACFb,IAAA,aACEU,IAAI,CAAC,aAAa,CAClBK,KAAK,CAAEP,OAAO,CAACG,WAAY,CAC3Ba,WAAW,CAAC,qBAAqB,CACjCC,QAAQ,CAAEZ,YAAa,CACxB,CAAC,cACFb,IAAA,UACEuB,IAAI,CAAC,QAAQ,CACbb,IAAI,CAAC,OAAO,CACZK,KAAK,CAAEP,OAAO,CAACI,KAAM,CACrBY,WAAW,CAAC,eAAe,CAC3BC,QAAQ,CAAEZ,YAAa,CACxB,CAAC,cACFb,IAAA,WAAQuB,IAAI,CAAC,QAAQ,CAAAD,QAAA,CAAEhB,cAAc,CAAG,QAAQ,CAAG,KAAK,CAAS,CAAC,EAC9D,CAAC,CAEX,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}